test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Amazon S3 configuration
amazon:
  service: S3
  access_key_id: <%= ENV["AWS_ACCESS_KEY_ID"] %>
  secret_access_key: <%= ENV["AWS_SECRET_ACCESS_KEY"] %>
  region: <%= ENV.fetch("AWS_REGION", "us-east-1") %>
  bucket: <%= ENV["AWS_S3_BUCKET"] %>
  # Optional: Custom endpoint for S3-compatible services
  # endpoint: <%= ENV["S3_ENDPOINT"] %>

# Google Cloud Storage configuration
google:
  service: GCS
  project: <%= ENV["GCP_PROJECT"] %>
  credentials: <%= ENV["GCP_CREDENTIALS_PATH"] ? Rails.root.join(ENV["GCP_CREDENTIALS_PATH"]) : Rails.application.credentials.dig(:gcp, :credentials) %>
  bucket: <%= ENV["GCP_BUCKET"] %>

# Azure Storage configuration
microsoft:
  service: AzureStorage
  storage_account_name: <%= ENV["AZURE_STORAGE_ACCOUNT_NAME"] %>
  storage_access_key: <%= ENV["AZURE_STORAGE_ACCESS_KEY"] %>
  container: <%= ENV["AZURE_STORAGE_CONTAINER"] %>

# Mirror configuration for multiple storage backends
mirror:
  service: Mirror
  primary: <%= ENV.fetch("STORAGE_PRIMARY", "local") %>
  mirrors: [ <%= ENV["STORAGE_MIRRORS"]&.split(",")&.map(&:strip)&.join(", ") %> ]

# Production configuration - uses environment variable to choose service
production:
  service: Disk
  root: <%= Rails.root.join("storage") %>
