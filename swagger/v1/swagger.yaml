openapi: 3.0.3
info:
  title: task_manager_api
  version: 1.0.0
servers: []
paths:
  /api/v1/signup:
    post:
      summary: create
      tags:
      - User
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                bio:
                  type: string
              required:
              - username
              - email
              - password
            example:
              username: newuser
              email: test@example.com
              password: Password123!
              bio: Test bio
      responses:
        '201':
          description: allows optional bio
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      bio:
                        type: string
                        nullable: true
                      admin:
                        type: boolean
                      email:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      profile_picture:
                        nullable: true
                    required:
                    - id
                    - username
                    - bio
                    - admin
                    - email
                    - created_at
                    - updated_at
                    - profile_picture
                  token:
                    type: string
                required:
                - data
                - token
              example:
                data:
                  id: 14670
                  username: newuser
                  bio: null
                  admin: false
                  email: test@example.com
                  created_at: '2025-08-30T15:15:23.050Z'
                  updated_at: '2025-08-30T15:15:23.050Z'
                  profile_picture: null
                token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxNDY3MCwiZXhwIjoxNzU2NTY4NzIzfQ.o79eE4SamdEYkz0gKDpSdyL9Rxfq4jq3Ed-bYvKvemQ
        '422':
          description: handles multiple validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
              example:
                errors:
                - Username can't be blank
                - Username can only contain letters, numbers, and underscores
                - Email is invalid
                - Password is too short (minimum is 8 characters)
                - Password must contain at least one lowercase letter, one uppercase
                  letter, one digit, and one special character (@$!%*?&)
  /api/v1/login:
    post:
      summary: login
      tags:
      - Auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
            example:
              username: testuser
              password: Password123!
      responses:
        '200':
          description: creates a refresh token in the database
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      bio:
                        nullable: true
                      admin:
                        type: boolean
                      email:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      profile_picture:
                        nullable: true
                    required:
                    - id
                    - username
                    - bio
                    - admin
                    - email
                    - created_at
                    - updated_at
                    - profile_picture
                  access_token:
                    type: string
                required:
                - data
                - access_token
              example:
                data:
                  id: 14324
                  username: testuser
                  bio: null
                  admin: false
                  email: user136@example.com
                  created_at: '2025-08-30T15:15:06.959Z'
                  updated_at: '2025-08-30T15:15:06.959Z'
                  profile_picture: null
                access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxNDMyNCwiZXhwIjoxNzU2NTY3ODA2fQ.hVdmcPMPNJw_rT5fSHTLfH6cqPhn33KlmhgqGKXpd64
        '401':
          description: rejects invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
              example:
                message: User doesn't exist
                error: Invalid credentials
  /api/v1/logout:
    post:
      summary: logout
      tags:
      - Auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
            example:
              refresh_token: 9306aab2708828529120870f5f0743974c38a5c78d9e7efc0f2cbb14f97fea6f7b15ae7ec387417487db34eab1d30d3dae7fdd430f159ddcafbcd8f784cf1e0c
      responses:
        '200':
          description: handles logout without refresh token gracefully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: Logged out
      security:
      - BearerAuth: []
  /api/v1/me:
    get:
      summary: me
      tags:
      - User
      responses:
        '200':
          description: returns current user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      bio:
                        nullable: true
                      admin:
                        type: boolean
                      email:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      profile_picture:
                        nullable: true
                    required:
                    - id
                    - username
                    - bio
                    - admin
                    - email
                    - created_at
                    - updated_at
                    - profile_picture
                required:
                - data
              example:
                data:
                  id: 14671
                  username: user465
                  bio: null
                  admin: false
                  email: user464@example.com
                  created_at: '2025-08-30T15:15:23.083Z'
                  updated_at: '2025-08-30T15:15:23.083Z'
                  profile_picture: null
        '401':
          description: handles invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: Please log in
      security:
      - BearerAuth: []
  /api/v1/password_resets:
    post:
      summary: create
      tags:
      - PasswordReset
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
            example:
              email: USER@EXAMPLE.COM
      responses:
        '200':
          description: handles email parameter case insensitively
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                required:
                - message
                - token
              example:
                message: Reset instructions sent
                token: pK7WL3q4cWJgL8zpTQHMAQ
        '404':
          description: returns not found for non-existent email
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Username not found
    put:
      summary: update
      tags:
      - PasswordReset
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
              required:
              - token
              - password
            example:
              token: SFqoMRGaRURx2v5z4IMZFw
              password: NewPassword123!
      responses:
        '200':
          description: clears reset token after successful reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: Password updated successfully
        '422':
          description: rejects already used token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
              example:
                error: Invalid or expired token
                errors:
                - Password can't be blank
  /api/v1/refresh:
    post:
      summary: refresh
      tags:
      - Auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
              - refresh_token
            example:
              refresh_token: 94b29ccefa43f4afdb3102abd717a436eeef74eb74b63f771ead58d1a87d081341167bb63d641665fdd411117de3f0eae030f9da7e93003e05e3ef83c4e93178
      responses:
        '200':
          description: revokes old refresh token after successful refresh
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                required:
                - access_token
              example:
                access_token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxNDMyNywiZXhwIjoxNzU2NTY4NzA3fQ.BmLby5n7saes99lFcnF-QiI2Gf7U6co2TcLd9Kv-HKU
        '401':
          description: revokes all refresh tokens when reused token detected
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invalid or reused refresh token. Logged out everywhere.
      security:
      - BearerAuth: []
  /api/v1/teams:
    get:
      summary: index
      tags:
      - Team
      responses:
        '200':
          description: returns a list of teams
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        members_count:
                          type: integer
                        projects_count:
                          type: integer
                        team_memberships:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              user_id:
                                type: integer
                              role:
                                type: string
                              created_at:
                                type: string
                            required:
                            - id
                            - user_id
                            - role
                            - created_at
                      required:
                      - id
                      - name
                      - description
                      - created_at
                      - updated_at
                      - members_count
                      - projects_count
                      - team_memberships
                required:
                - data
              example:
                data:
                - id: 7674
                  name: Team 246
                  description: Description for team 246
                  created_at: '2025-08-30T15:15:22.748Z'
                  updated_at: '2025-08-30T15:15:22.748Z'
                  members_count: 1
                  projects_count: 0
                  team_memberships:
                  - id: 8355
                    user_id: 14662
                    role: owner
                    created_at: '2025-08-30T15:15:22.749Z'
      security:
      - BearerAuth: []
    post:
      summary: create
      tags:
      - Team
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                team:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                  required:
                  - name
                  - description
              required:
              - team
            example:
              team:
                name: New Team
                description: New team description
      responses:
        '201':
          description: creates a new team and assigns the user as owner
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      members_count:
                        type: integer
                      projects_count:
                        type: integer
                      team_memberships:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            user_id:
                              type: integer
                            role:
                              type: string
                            created_at:
                              type: string
                          required:
                          - id
                          - user_id
                          - role
                          - created_at
                    required:
                    - id
                    - name
                    - description
                    - created_at
                    - updated_at
                    - members_count
                    - projects_count
                    - team_memberships
                required:
                - data
              example:
                data:
                  id: 7676
                  name: New Team
                  description: New team description
                  created_at: '2025-08-30T15:15:22.804Z'
                  updated_at: '2025-08-30T15:15:22.804Z'
                  members_count: 1
                  projects_count: 0
                  team_memberships:
                  - id: 8357
                    user_id: 14663
                    role: owner
                    created_at: '2025-08-30T15:15:22.807Z'
      security:
      - BearerAuth: []
  /api/v1/teams/{id}:
    get:
      summary: show
      tags:
      - Team
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 7677
      responses:
        '200':
          description: returns the team details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      members_count:
                        type: integer
                      projects_count:
                        type: integer
                      team_memberships:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            user_id:
                              type: integer
                            role:
                              type: string
                            created_at:
                              type: string
                          required:
                          - id
                          - user_id
                          - role
                          - created_at
                    required:
                    - id
                    - name
                    - description
                    - created_at
                    - updated_at
                    - members_count
                    - projects_count
                    - team_memberships
                required:
                - data
              example:
                data:
                  id: 7677
                  name: Team 248
                  description: Description for team 248
                  created_at: '2025-08-30T15:15:22.828Z'
                  updated_at: '2025-08-30T15:15:22.828Z'
                  members_count: 1
                  projects_count: 0
                  team_memberships:
                  - id: 8358
                    user_id: 14664
                    role: owner
                    created_at: '2025-08-30T15:15:22.829Z'
      security:
      - BearerAuth: []
  /api/v1/teams/{team_id}/projects:
    get:
      summary: index
      tags:
      - Project
      parameters:
      - name: team_id
        in: path
        required: true
        schema:
          type: integer
        example: 7545
      responses:
        '200':
          description: returns a list of projects for a team
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        status:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        members_count:
                          type: integer
                        tasks_count:
                          type: integer
                        sub_tasks_count:
                          type: integer
                        team:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            description:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            members_count:
                              type: integer
                            projects_count:
                              type: integer
                          required:
                          - id
                          - name
                          - description
                          - created_at
                          - updated_at
                          - members_count
                          - projects_count
                        project_memberships:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              role:
                                type: string
                              created_at:
                                type: string
                            required:
                            - id
                            - role
                            - created_at
                        comments:
                          type: array
                          items: {}
                        tags:
                          type: array
                          items: {}
                      required:
                      - id
                      - name
                      - description
                      - status
                      - created_at
                      - updated_at
                      - members_count
                      - tasks_count
                      - sub_tasks_count
                      - team
                      - project_memberships
                      - comments
                      - tags
                required:
                - data
              example:
                data:
                - id: 6360
                  name: Project 65
                  description: Description for project 65
                  status: active
                  created_at: '2025-08-30T15:15:12.900Z'
                  updated_at: '2025-08-30T15:15:12.900Z'
                  members_count: 2
                  tasks_count: 0
                  sub_tasks_count: 0
                  team:
                    id: 7543
                    name: Team 115
                    description: Description for team 115
                    created_at: '2025-08-30T15:15:12.895Z'
                    updated_at: '2025-08-30T15:15:12.895Z'
                    members_count: 1
                    projects_count: 4
                  project_memberships:
                  - id: 13908
                    role: owner
                    created_at: '2025-08-30T15:15:12.904Z'
                  - id: 13909
                    role: owner
                    created_at: '2025-08-30T15:15:12.906Z'
                  comments: []
                  tags: []
                - id: 6361
                  name: Project 66
                  description: Description for project 66
                  status: active
                  created_at: '2025-08-30T15:15:12.910Z'
                  updated_at: '2025-08-30T15:15:12.910Z'
                  members_count: 1
                  tasks_count: 0
                  sub_tasks_count: 0
                  team:
                    id: 7543
                    name: Team 115
                    description: Description for team 115
                    created_at: '2025-08-30T15:15:12.895Z'
                    updated_at: '2025-08-30T15:15:12.895Z'
                    members_count: 1
                    projects_count: 4
                  project_memberships:
                  - id: 13910
                    role: owner
                    created_at: '2025-08-30T15:15:12.912Z'
                  comments: []
                  tags: []
                - id: 6362
                  name: Project 67
                  description: Description for project 67
                  status: active
                  created_at: '2025-08-30T15:15:12.915Z'
                  updated_at: '2025-08-30T15:15:12.915Z'
                  members_count: 1
                  tasks_count: 0
                  sub_tasks_count: 0
                  team:
                    id: 7543
                    name: Team 115
                    description: Description for team 115
                    created_at: '2025-08-30T15:15:12.895Z'
                    updated_at: '2025-08-30T15:15:12.895Z'
                    members_count: 1
                    projects_count: 4
                  project_memberships:
                  - id: 13911
                    role: owner
                    created_at: '2025-08-30T15:15:12.919Z'
                  comments: []
                  tags: []
                - id: 6363
                  name: Project 68
                  description: Description for project 68
                  status: active
                  created_at: '2025-08-30T15:15:12.924Z'
                  updated_at: '2025-08-30T15:15:12.924Z'
                  members_count: 1
                  tasks_count: 0
                  sub_tasks_count: 0
                  team:
                    id: 7543
                    name: Team 115
                    description: Description for team 115
                    created_at: '2025-08-30T15:15:12.895Z'
                    updated_at: '2025-08-30T15:15:12.895Z'
                    members_count: 1
                    projects_count: 4
                  project_memberships:
                  - id: 13912
                    role: owner
                    created_at: '2025-08-30T15:15:12.925Z'
                  comments: []
                  tags: []
        '403':
          description: requires team membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be a member of this team to view its projects
      security:
      - BearerAuth: []
    post:
      summary: create
      tags:
      - Project
      parameters:
      - name: team_id
        in: path
        required: true
        schema:
          type: integer
        example: 7550
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                  required:
                  - name
                  - description
              required:
              - project
            example:
              project:
                name: New Project
                description: A new project description
      responses:
        '201':
          description: creates a new project
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      members_count:
                        type: integer
                      tasks_count:
                        type: integer
                      sub_tasks_count:
                        type: integer
                      team:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          projects_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - created_at
                        - updated_at
                        - members_count
                        - projects_count
                      project_memberships:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            role:
                              type: string
                            created_at:
                              type: string
                          required:
                          - id
                          - role
                          - created_at
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - created_at
                    - updated_at
                    - members_count
                    - tasks_count
                    - sub_tasks_count
                    - team
                    - project_memberships
                    - comments
                    - tags
                required:
                - data
              example:
                data:
                  id: 6368
                  name: New Project
                  description: A new project description
                  status: active
                  created_at: '2025-08-30T15:15:13.165Z'
                  updated_at: '2025-08-30T15:15:13.165Z'
                  members_count: 1
                  tasks_count: 0
                  sub_tasks_count: 0
                  team:
                    id: 7548
                    name: Team 120
                    description: Description for team 120
                    created_at: '2025-08-30T15:15:13.144Z'
                    updated_at: '2025-08-30T15:15:13.144Z'
                    members_count: 1
                    projects_count: 2
                  project_memberships:
                  - id: 13921
                    role: owner
                    created_at: '2025-08-30T15:15:13.170Z'
                  comments: []
                  tags: []
        '403':
          description: requires team admin access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be an admin or owner of the team to create projects
        '422':
          description: validates project data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: 'Validation failed: Name can''t be blank, Description can''t
                  be blank'
      security:
      - BearerAuth: []
  /api/v1/projects/{id}:
    delete:
      summary: destroy
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6374
      responses:
        '200':
          description: deletes a project
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Project deleted successfully
        '403':
          description: requires owner access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be the owner of this project to perform this action
      security:
      - BearerAuth: []
    get:
      summary: show
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6366
      responses:
        '200':
          description: returns a single project
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      members_count:
                        type: integer
                      tasks_count:
                        type: integer
                      sub_tasks_count:
                        type: integer
                      team:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          projects_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - created_at
                        - updated_at
                        - members_count
                        - projects_count
                      project_memberships:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            role:
                              type: string
                            created_at:
                              type: string
                          required:
                          - id
                          - role
                          - created_at
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - created_at
                    - updated_at
                    - members_count
                    - tasks_count
                    - sub_tasks_count
                    - team
                    - project_memberships
                    - comments
                    - tags
                required:
                - data
              example:
                data:
                  id: 6365
                  name: Project 70
                  description: Description for project 70
                  status: active
                  created_at: '2025-08-30T15:15:13.083Z'
                  updated_at: '2025-08-30T15:15:13.083Z'
                  members_count: 2
                  tasks_count: 0
                  sub_tasks_count: 0
                  team:
                    id: 7546
                    name: Team 118
                    description: Description for team 118
                    created_at: '2025-08-30T15:15:13.077Z'
                    updated_at: '2025-08-30T15:15:13.077Z'
                    members_count: 1
                    projects_count: 1
                  project_memberships:
                  - id: 13915
                    role: owner
                    created_at: '2025-08-30T15:15:13.087Z'
                  - id: 13916
                    role: owner
                    created_at: '2025-08-30T15:15:13.089Z'
                  comments: []
                  tags: []
        '403':
          description: returns 404 for non-member
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be a member of this project or its team to view it
      security:
      - BearerAuth: []
    put:
      summary: update
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6372
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - project
            example:
              project:
                name: Updated Project Name
      responses:
        '200':
          description: updates a project
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      members_count:
                        type: integer
                      tasks_count:
                        type: integer
                      sub_tasks_count:
                        type: integer
                      team:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          projects_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - created_at
                        - updated_at
                        - members_count
                        - projects_count
                      project_memberships:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            role:
                              type: string
                            created_at:
                              type: string
                          required:
                          - id
                          - role
                          - created_at
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - created_at
                    - updated_at
                    - members_count
                    - tasks_count
                    - sub_tasks_count
                    - team
                    - project_memberships
                    - comments
                    - tags
                required:
                - data
              example:
                data:
                  id: 6371
                  name: Updated Project Name
                  description: Description for project 75
                  status: active
                  created_at: '2025-08-30T15:15:13.263Z'
                  updated_at: '2025-08-30T15:15:13.284Z'
                  members_count: 2
                  tasks_count: 0
                  sub_tasks_count: 0
                  team:
                    id: 7551
                    name: Team 123
                    description: Description for team 123
                    created_at: '2025-08-30T15:15:13.260Z'
                    updated_at: '2025-08-30T15:15:13.260Z'
                    members_count: 1
                    projects_count: 1
                  project_memberships:
                  - id: 13926
                    role: owner
                    created_at: '2025-08-30T15:15:13.265Z'
                  - id: 13927
                    role: owner
                    created_at: '2025-08-30T15:15:13.268Z'
                  comments: []
                  tags: []
        '403':
          description: requires admin access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be an admin or owner of this project to perform this
                  action
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/add_attachment:
    post:
      summary: add_attachment
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6338
      responses:
        '201':
          description: handles file uploads gracefully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        nullable: true
                      link:
                        nullable: true
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      file_url:
                        type: string
                      filename:
                        type: string
                      content_type:
                        type: string
                      size:
                        type: integer
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          username:
                            type: string
                          bio:
                            nullable: true
                          admin:
                            type: boolean
                          email:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          profile_picture:
                            nullable: true
                        required:
                        - id
                        - username
                        - bio
                        - admin
                        - email
                        - created_at
                        - updated_at
                        - profile_picture
                    required:
                    - id
                    - name
                    - link
                    - created_at
                    - updated_at
                    - file_url
                    - filename
                    - content_type
                    - size
                    - user
                required:
                - data
              example:
                data:
                  id: 1362
                  name: null
                  link: null
                  created_at: '2025-08-30T15:15:10.907Z'
                  updated_at: '2025-08-30T15:15:10.912Z'
                  file_url: /rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NzgyLCJwdXIiOiJibG9iX2lkIn19--ae89c956a8eb05c1ff2a2eabd012ace88450a263/test_file.txt
                  filename: test_file.txt
                  content_type: text/plain
                  size: 115
                  user:
                    id: 14365
                    username: user164
                    bio: null
                    admin: false
                    email: user163@example.com
                    created_at: '2025-08-30T15:15:10.878Z'
                    updated_at: '2025-08-30T15:15:10.878Z'
                    profile_picture: null
        '400':
          description: requires file attachment
          content:
            text/html:
              schema:
                type: string
        '403':
          description: requires project membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be a member of this project or its team to view it
        '404':
          description: handles non-existent project
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Project not found
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  type: object
                  properties:
                    file:
                      type: string
                      format: binary
                  required:
                  - file
              required:
              - attachment
            example:
              attachment:
                file: test_file.txt
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/add_comment:
    post:
      summary: add_comment
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6342
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                comment:
                  type: object
                  properties:
                    content:
                      type: string
                  required:
                  - content
              required:
              - comment
            example:
              comment:
                content: This is a test comment
      responses:
        '201':
          description: allows project members to comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      content:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          username:
                            type: string
                          bio:
                            nullable: true
                          admin:
                            type: boolean
                          email:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          profile_picture:
                            nullable: true
                        required:
                        - id
                        - username
                        - bio
                        - admin
                        - email
                        - created_at
                        - updated_at
                        - profile_picture
                    required:
                    - id
                    - content
                    - created_at
                    - updated_at
                    - user
                required:
                - data
              example:
                data:
                  id: 825
                  content: This is a test comment
                  created_at: '2025-08-30T15:15:11.146Z'
                  updated_at: '2025-08-30T15:15:11.146Z'
                  user:
                    id: 14371
                    username: user170
                    bio: null
                    admin: false
                    email: user169@example.com
                    created_at: '2025-08-30T15:15:11.134Z'
                    updated_at: '2025-08-30T15:15:11.134Z'
                    profile_picture: null
        '403':
          description: requires project membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be a member of this project or its team to view it
        '422':
          description: requires content
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Content can't be blank
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/add_tag:
    post:
      summary: add_tag
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 99999
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
            example:
              name: URGENT
      responses:
        '201':
          description: handles case-sensitive tag names
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    required:
                    - id
                    - name
                required:
                - data
              example:
                data:
                  id: 1156
                  name: urgent
        '403':
          description: requires project membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be a member of this project or its team to view it
        '404':
          description: handles non-existent project
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Project not found
        '422':
          description: does not add duplicate tags to the same project
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Tag already exists on this project
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/attachments/{attachment_id}:
    delete:
      summary: remove_attachment
      tags:
      - Project
      parameters:
      - name: attachment_id
        in: path
        required: true
        schema:
          type: integer
        example: 99999
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6336
      responses:
        '200':
          description: allows project members to delete any attachment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Attachment deleted successfully
        '403':
          description: prevents non-members from deleting attachments
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be an admin or owner of this project to perform this
                  action
        '404':
          description: returns 404 for non-existent attachment
          content:
            text/html:
              schema:
                type: string
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/comments/{comment_id}:
    delete:
      summary: remove_comment
      tags:
      - Project
      parameters:
      - name: comment_id
        in: path
        required: true
        schema:
          type: integer
        example: 99999
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6346
      responses:
        '200':
          description: allows project owner to delete any comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Comment deleted successfully
        '403':
          description: prevents non-owners from deleting other users' comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be an admin or owner of this project to perform this
                  action
        '404':
          description: returns 404 for non-existent comment
          content:
            text/html:
              schema:
                type: string
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/invite_member:
    post:
      summary: invite_member
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6378
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                role:
                  type: string
              required:
              - username
            example:
              username: user212
              role: member
      responses:
        '201':
          description: defaults to member role
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Invitation sent successfully.
        '404':
          description: validates user exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User not found
        '422':
          description: prevents duplicate invitations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User is already a member of this project
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/members/{user_id}:
    delete:
      summary: remove_member
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6380
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
        example: 14420
      responses:
        '200':
          description: removes a member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Member removed successfully
        '422':
          description: prevents removing the owner
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Cannot remove project owner
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/members/{user_id}/demote:
    put:
      summary: demote_member
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6384
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
        example: 14428
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties: {}
            example: {}
      responses:
        '200':
          description: demotes an admin to member
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Admin demoted to member successfully
        '422':
          description: prevents demoting the owner
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Cannot demote project owner
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/members/{user_id}/promote:
    put:
      summary: promote_member
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6382
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
        example: 14424
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties: {}
            example: {}
      responses:
        '200':
          description: promotes a member to admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Member promoted to admin successfully
        '422':
          description: prevents promoting the owner
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User is already the owner
      security:
      - BearerAuth: []
  /api/v1/projects/{id}/tags/{tag_id}:
    delete:
      summary: remove_tag
      tags:
      - Project
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 6358
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
        example: 1162
      responses:
        '200':
          description: does not delete the tag from other projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Tag removed successfully
        '403':
          description: allows project members to remove tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be an admin or owner of this project to perform this
                  action
        '404':
          description: returns 404 for non-existent tag association
          content:
            text/html:
              schema:
                type: string
      security:
      - BearerAuth: []
  /api/v1/projects/{project_id}/tasks:
    get:
      summary: index
      tags:
      - Task
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: integer
        example: 6489
      responses:
        '200':
          description: returns a list of tasks for a project
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        status:
                          type: string
                        priority:
                          type: string
                        due_date:
                          type: string
                        parent_id:
                          nullable: true
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        sub_tasks_count:
                          type: integer
                        comments_count:
                          type: integer
                        tags_count:
                          type: integer
                        members_count:
                          type: integer
                        attachments_count:
                          type: integer
                        project:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            description:
                              type: string
                            status:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            members_count:
                              type: integer
                            tasks_count:
                              type: integer
                            sub_tasks_count:
                              type: integer
                          required:
                          - id
                          - name
                          - description
                          - status
                          - created_at
                          - updated_at
                          - members_count
                          - tasks_count
                          - sub_tasks_count
                        users:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              username:
                                type: string
                              bio:
                                nullable: true
                              admin:
                                type: boolean
                              email:
                                type: string
                              created_at:
                                type: string
                              updated_at:
                                type: string
                              profile_picture:
                                nullable: true
                            required:
                            - id
                            - username
                            - bio
                            - admin
                            - email
                            - created_at
                            - updated_at
                            - profile_picture
                        sub_tasks:
                          type: array
                          items: {}
                        comments:
                          type: array
                          items: {}
                        tags:
                          type: array
                          items: {}
                        attachments:
                          type: array
                          items: {}
                      required:
                      - id
                      - name
                      - description
                      - status
                      - priority
                      - due_date
                      - parent_id
                      - created_at
                      - updated_at
                      - sub_tasks_count
                      - comments_count
                      - tags_count
                      - members_count
                      - attachments_count
                      - project
                      - users
                      - sub_tasks
                      - comments
                      - tags
                      - attachments
                required:
                - data
              example:
                data:
                - id: 4986
                  name: Task 139
                  description: Description for task 142
                  status: todo
                  priority: low
                  due_date: '2025-09-01T15:15:22.503Z'
                  parent_id: null
                  created_at: '2025-08-30T15:15:22.505Z'
                  updated_at: '2025-08-30T15:15:22.505Z'
                  sub_tasks_count: 0
                  comments_count: 0
                  tags_count: 0
                  members_count: 1
                  attachments_count: 0
                  project:
                    id: 6489
                    name: Project 193
                    description: Description for project 193
                    status: active
                    created_at: '2025-08-30T15:15:22.493Z'
                    updated_at: '2025-08-30T15:15:22.493Z'
                    members_count: 2
                    tasks_count: 4
                    sub_tasks_count: 0
                  users:
                  - id: 14657
                    username: user456
                    bio: null
                    admin: false
                    email: user455@example.com
                    created_at: '2025-08-30T15:15:22.488Z'
                    updated_at: '2025-08-30T15:15:22.488Z'
                    profile_picture: null
                  sub_tasks: []
                  comments: []
                  tags: []
                  attachments: []
      security:
      - BearerAuth: []
    post:
      summary: create
      tags:
      - Task
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: integer
        example: 6491
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    priority:
                      type: string
                    due_date:
                      type: string
                  required:
                  - name
                  - description
                  - priority
                  - due_date
              required:
              - task
            example:
              task:
                name: New Task
                description: Task Description
                priority: medium
                due_date: 2025-09-06 15:15:22 UTC
      responses:
        '201':
          description: creates a new task
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      priority:
                        type: string
                      due_date:
                        type: string
                      parent_id:
                        nullable: true
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      sub_tasks_count:
                        type: integer
                      comments_count:
                        type: integer
                      tags_count:
                        type: integer
                      members_count:
                        type: integer
                      attachments_count:
                        type: integer
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          status:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          tasks_count:
                            type: integer
                          sub_tasks_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - status
                        - created_at
                        - updated_at
                        - members_count
                        - tasks_count
                        - sub_tasks_count
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                      sub_tasks:
                        type: array
                        items: {}
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                      attachments:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - priority
                    - due_date
                    - parent_id
                    - created_at
                    - updated_at
                    - sub_tasks_count
                    - comments_count
                    - tags_count
                    - members_count
                    - attachments_count
                    - project
                    - users
                    - sub_tasks
                    - comments
                    - tags
                    - attachments
                required:
                - data
              example:
                data:
                  id: 4992
                  name: New Task
                  description: Task Description
                  status: todo
                  priority: medium
                  due_date: '2025-09-06T15:15:22.000Z'
                  parent_id: null
                  created_at: '2025-08-30T15:15:22.638Z'
                  updated_at: '2025-08-30T15:15:22.638Z'
                  sub_tasks_count: 0
                  comments_count: 0
                  tags_count: 0
                  members_count: 1
                  attachments_count: 0
                  project:
                    id: 6491
                    name: Project 195
                    description: Description for project 195
                    status: active
                    created_at: '2025-08-30T15:15:22.618Z'
                    updated_at: '2025-08-30T15:15:22.618Z'
                    members_count: 2
                    tasks_count: 2
                    sub_tasks_count: 0
                  users:
                  - id: 14659
                    username: user458
                    bio: null
                    admin: false
                    email: user457@example.com
                    created_at: '2025-08-30T15:15:22.614Z'
                    updated_at: '2025-08-30T15:15:22.614Z'
                    profile_picture: null
                  sub_tasks: []
                  comments: []
                  tags: []
                  attachments: []
      security:
      - BearerAuth: []
  /api/v1/tasks/{id}:
    delete:
      summary: destroy
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4994
      responses:
        '200':
          description: deletes a task
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Task deleted successfully
      security:
      - BearerAuth: []
    get:
      summary: show
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4990
      responses:
        '200':
          description: returns a single task
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      priority:
                        type: string
                      due_date:
                        type: string
                      parent_id:
                        nullable: true
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      sub_tasks_count:
                        type: integer
                      comments_count:
                        type: integer
                      tags_count:
                        type: integer
                      members_count:
                        type: integer
                      attachments_count:
                        type: integer
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          status:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          tasks_count:
                            type: integer
                          sub_tasks_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - status
                        - created_at
                        - updated_at
                        - members_count
                        - tasks_count
                        - sub_tasks_count
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                      sub_tasks:
                        type: array
                        items: {}
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                      attachments:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - priority
                    - due_date
                    - parent_id
                    - created_at
                    - updated_at
                    - sub_tasks_count
                    - comments_count
                    - tags_count
                    - members_count
                    - attachments_count
                    - project
                    - users
                    - sub_tasks
                    - comments
                    - tags
                    - attachments
                required:
                - data
              example:
                data:
                  id: 4990
                  name: Task 143
                  description: Description for task 146
                  status: todo
                  priority: low
                  due_date: '2025-09-01T15:15:22.570Z'
                  parent_id: null
                  created_at: '2025-08-30T15:15:22.571Z'
                  updated_at: '2025-08-30T15:15:22.571Z'
                  sub_tasks_count: 0
                  comments_count: 0
                  tags_count: 0
                  members_count: 1
                  attachments_count: 0
                  project:
                    id: 6490
                    name: Project 194
                    description: Description for project 194
                    status: active
                    created_at: '2025-08-30T15:15:22.563Z'
                    updated_at: '2025-08-30T15:15:22.563Z'
                    members_count: 2
                    tasks_count: 1
                    sub_tasks_count: 0
                  users:
                  - id: 14658
                    username: user457
                    bio: null
                    admin: false
                    email: user456@example.com
                    created_at: '2025-08-30T15:15:22.559Z'
                    updated_at: '2025-08-30T15:15:22.559Z'
                    profile_picture: null
                  sub_tasks: []
                  comments: []
                  tags: []
                  attachments: []
        '403':
          description: prevents non-assigned project members from viewing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: You must be assigned to this task to view it
        '404':
          description: prevents outside users from viewing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Task not found
      security:
      - BearerAuth: []
    put:
      summary: update
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4993
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - task
            example:
              task:
                name: Updated Task Name
      responses:
        '200':
          description: updates a task
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      priority:
                        type: string
                      due_date:
                        type: string
                      parent_id:
                        nullable: true
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      sub_tasks_count:
                        type: integer
                      comments_count:
                        type: integer
                      tags_count:
                        type: integer
                      members_count:
                        type: integer
                      attachments_count:
                        type: integer
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          status:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          tasks_count:
                            type: integer
                          sub_tasks_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - status
                        - created_at
                        - updated_at
                        - members_count
                        - tasks_count
                        - sub_tasks_count
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                      sub_tasks:
                        type: array
                        items: {}
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                      attachments:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - priority
                    - due_date
                    - parent_id
                    - created_at
                    - updated_at
                    - sub_tasks_count
                    - comments_count
                    - tags_count
                    - members_count
                    - attachments_count
                    - project
                    - users
                    - sub_tasks
                    - comments
                    - tags
                    - attachments
                required:
                - data
              example:
                data:
                  id: 4993
                  name: Updated Task Name
                  description: Description for task 148
                  status: todo
                  priority: low
                  due_date: '2025-09-01T15:15:22.680Z'
                  parent_id: null
                  created_at: '2025-08-30T15:15:22.682Z'
                  updated_at: '2025-08-30T15:15:22.691Z'
                  sub_tasks_count: 0
                  comments_count: 0
                  tags_count: 0
                  members_count: 1
                  attachments_count: 0
                  project:
                    id: 6492
                    name: Project 196
                    description: Description for project 196
                    status: active
                    created_at: '2025-08-30T15:15:22.670Z'
                    updated_at: '2025-08-30T15:15:22.670Z'
                    members_count: 2
                    tasks_count: 1
                    sub_tasks_count: 0
                  users:
                  - id: 14660
                    username: user459
                    bio: null
                    admin: false
                    email: user458@example.com
                    created_at: '2025-08-30T15:15:22.665Z'
                    updated_at: '2025-08-30T15:15:22.665Z'
                    profile_picture: null
                  sub_tasks: []
                  comments: []
                  tags: []
                  attachments: []
      security:
      - BearerAuth: []
  /api/v1/tasks/{id}/assign_member:
    post:
      summary: assign_member
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4956
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                role:
                  type: string
              required:
              - username
              - role
            example:
              username: user354
              role: assignee
      responses:
        '201':
          description: allows assigning members
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: User assigned to task successfully
        '403':
          description: prevents assigning members
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: You must be an admin or owner of this project to perform
                  this action
        '404':
          description: prevents access completely
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Task not found
        '422':
          description: prevents assigning users not in project
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User must be a member of the project to be assigned to tasks
      security:
      - BearerAuth: []
  /api/v1/tasks/{id}/members/{user_id}:
    delete:
      summary: remove_member
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4967
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
        example: 14623
      responses:
        '200':
          description: allows removal
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: User removed from task successfully
        '403':
          description: prevents removal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: You must be an admin or owner of this project to perform
                  this action
        '404':
          description: returns appropriate error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User is not assigned to this task
            text/html:
              schema:
                type: string
        '422':
          description: prevents removal
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Cannot remove the only assignee from a task
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/attachments:
    post:
      summary: create
      tags:
      - TaskAttachment
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4935
      responses:
        '201':
          description: maintains separate attachments for parent and sub-tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                        nullable: true
                      link:
                        type: string
                        nullable: true
                      created_at:
                        type: string
                      user_id:
                        type: integer
                      file_url:
                        type: string
                      file_name:
                        type: string
                      content_type:
                        type: string
                    required:
                    - id
                    - name
                    - link
                    - created_at
                    - user_id
                required:
                - data
              example:
                data:
                  id: 1392
                  name: Sub File
                  link: null
                  created_at: '2025-08-30T15:15:18.055Z'
                  user_id: 14500
                  file_url: http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6ODAwLCJwdXIiOiJibG9iX2lkIn19--f4e3432226a2ff1557a729ecb7ca55243ca492a7/test_file.txt
                  file_name: test_file.txt
                  content_type: text/plain
        '403':
          description: handles task from different project
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to manage attachments for this resource
        '404':
          description: handles non-existent task
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Task not found
        '422':
          description: requires either file or link
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Link can't be blank, File can't be blank
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                link:
                  type: string
                name:
                  type: string
              required:
              - file
            example:
              file: test_file.txt
              link: https://example.com
              name: Sub File
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                link:
                  type: string
                name:
                  type: string
              required:
              - link
              - name
            example:
              link: invalid-url
              name: Bad Link
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/attachments/{id}:
    delete:
      summary: destroy
      tags:
      - TaskAttachment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1380
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4914
      responses:
        '200':
          description: handles file attachments deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Attachment removed successfully
        '403':
          description: prevents non-members from deleting attachments
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to manage attachments for this resource
        '404':
          description: returns 404 for non-existent attachment
          content:
            text/html:
              schema:
                type: string
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/attachments/{id}/download:
    get:
      summary: download
      tags:
      - TaskAttachment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1389
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4926
      responses:
        '302':
          description: allows downloading sub-task attachments with proper permissions
          content:
            text/html:
              schema:
                type: string
              example: ''
        '403':
          description: prevents users outside project from downloading
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to manage attachments for this resource
        '404':
          description: returns 404 for attachment without file
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: File not found
            text/html:
              schema:
                type: string
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/comments:
    post:
      summary: create
      tags:
      - TaskComment
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4940
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
              - content
            example:
              content: This is a task comment
      responses:
        '201':
          description: allows project members to comment on tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      content:
                        type: string
                      commentable_type:
                        type: string
                      commentable_id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      user_id:
                        type: integer
                    required:
                    - id
                    - content
                    - commentable_type
                    - commentable_id
                    - created_at
                    - updated_at
                    - user_id
                required:
                - data
              example:
                data:
                  id: 834
                  content: This is a task comment
                  commentable_type: Task
                  commentable_id: 4940
                  created_at: '2025-08-30T15:15:18.365Z'
                  updated_at: '2025-08-30T15:15:18.365Z'
                  user_id: 14511
        '403':
          description: requires task membership or project membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to manage comments for this resource
        '422':
          description: requires content
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Content can't be blank
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/comments/{id}:
    delete:
      summary: destroy
      tags:
      - TaskComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 99999
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4947
      responses:
        '200':
          description: allows project owner to delete any comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Comment removed successfully
        '403':
          description: prevents non-authorized users from deleting comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to delete this comment
        '404':
          description: returns 404 for non-existent comment
          content:
            text/html:
              schema:
                type: string
      security:
      - BearerAuth: []
    put:
      summary: update
      tags:
      - TaskComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 839
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4943
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
              - content
            example:
              content: Updated task comment
      responses:
        '200':
          description: allows project owner to update any comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      commentable_id:
                        type: integer
                      content:
                        type: string
                      commentable_type:
                        type: string
                      user_id:
                        type: integer
                      id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - commentable_id
                    - content
                    - commentable_type
                    - user_id
                    - id
                    - created_at
                    - updated_at
                required:
                - data
              example:
                data:
                  commentable_id: 4942
                  content: Updated task comment
                  commentable_type: Task
                  user_id: 14514
                  id: 837
                  created_at: '2025-08-30T15:15:18.458Z'
                  updated_at: '2025-08-30T15:15:18.467Z'
        '403':
          description: prevents non-authorized users from updating comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to update this comment
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/sub_tasks:
    get:
      summary: index
      tags:
      - SubTask
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 99999
      responses:
        '200':
          description: returns empty array when parent task has no sub-tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        status:
                          type: string
                        priority:
                          type: string
                        due_date:
                          type: string
                        parent_id:
                          type: integer
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        sub_tasks_count:
                          type: integer
                        comments_count:
                          type: integer
                        tags_count:
                          type: integer
                        members_count:
                          type: integer
                        attachments_count:
                          type: integer
                        project:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            description:
                              type: string
                            status:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            members_count:
                              type: integer
                            tasks_count:
                              type: integer
                            sub_tasks_count:
                              type: integer
                          required:
                          - id
                          - name
                          - description
                          - status
                          - created_at
                          - updated_at
                          - members_count
                          - tasks_count
                          - sub_tasks_count
                        users:
                          type: array
                          items: {}
                        sub_tasks:
                          type: array
                          items: {}
                        comments:
                          type: array
                          items: {}
                        tags:
                          type: array
                          items: {}
                        attachments:
                          type: array
                          items: {}
                      required:
                      - id
                      - name
                      - description
                      - status
                      - priority
                      - due_date
                      - parent_id
                      - created_at
                      - updated_at
                      - sub_tasks_count
                      - comments_count
                      - tags_count
                      - members_count
                      - attachments_count
                      - project
                      - users
                      - sub_tasks
                      - comments
                      - tags
                      - attachments
                required:
                - data
              example:
                data: []
        '404':
          description: returns 404 for non-existent parent task
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Task not found
      security:
      - BearerAuth: []
    post:
      summary: create
      tags:
      - SubTask
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4879
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    priority:
                      type: string
                    due_date:
                      type: string
                  required:
                  - name
              required:
              - task
            example:
              task:
                name: Sub-task Name
                description: Sub-task description
                priority: medium
                due_date: 2025-09-02 15:15:14 UTC
      responses:
        '201':
          description: creates sub-task within transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                        nullable: true
                      status:
                        type: string
                      priority:
                        type: string
                        nullable: true
                      due_date:
                        type: string
                        nullable: true
                      parent_id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      sub_tasks_count:
                        type: integer
                      comments_count:
                        type: integer
                      tags_count:
                        type: integer
                      members_count:
                        type: integer
                      attachments_count:
                        type: integer
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          status:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          tasks_count:
                            type: integer
                          sub_tasks_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - status
                        - created_at
                        - updated_at
                        - members_count
                        - tasks_count
                        - sub_tasks_count
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                      sub_tasks:
                        type: array
                        items: {}
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                      attachments:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - priority
                    - due_date
                    - parent_id
                    - created_at
                    - updated_at
                    - sub_tasks_count
                    - comments_count
                    - tags_count
                    - members_count
                    - attachments_count
                    - project
                    - users
                    - sub_tasks
                    - comments
                    - tags
                    - attachments
                required:
                - data
              example:
                data:
                  id: 4880
                  name: Sub-task Name
                  description: Sub-task description
                  status: todo
                  priority: medium
                  due_date: '2025-09-02T15:15:14.000Z'
                  parent_id: 4879
                  created_at: '2025-08-30T15:15:14.609Z'
                  updated_at: '2025-08-30T15:15:14.609Z'
                  sub_tasks_count: 0
                  comments_count: 0
                  tags_count: 0
                  members_count: 1
                  attachments_count: 0
                  project:
                    id: 6398
                    name: Project 102
                    description: Description for project 102
                    status: active
                    created_at: '2025-08-30T15:15:14.587Z'
                    updated_at: '2025-08-30T15:15:14.587Z'
                    members_count: 2
                    tasks_count: 1
                    sub_tasks_count: 1
                  users:
                  - id: 14446
                    username: user245
                    bio: null
                    admin: false
                    email: user244@example.com
                    created_at: '2025-08-30T15:15:14.581Z'
                    updated_at: '2025-08-30T15:15:14.581Z'
                    profile_picture: null
                  sub_tasks: []
                  comments: []
                  tags: []
                  attachments: []
        '403':
          description: requires project admin or owner permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You must be an admin or owner of the project to create sub-tasks
        '422':
          description: requires task name
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Name can't be blank
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/tags:
    post:
      summary: create
      tags:
      - TaskTag
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 99999
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
            example:
              name: BUG
      responses:
        '200':
          description: handles case-sensitive tag names
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                      required:
                      - id
                      - name
                      - created_at
                      - updated_at
                required:
                - data
              example:
                data:
                - id: 1169
                  name: BUG
                  created_at: '2025-08-30T15:15:21.607Z'
                  updated_at: '2025-08-30T15:15:21.607Z'
        '403':
          description: requires project membership for task access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to manage tags for this resource
        '404':
          description: handles non-existent task
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Task not found
      security:
      - BearerAuth: []
  /api/v1/tasks/{task_id}/tags/{id}:
    delete:
      summary: destroy
      tags:
      - TaskTag
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1176
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
        example: 4984
      responses:
        '200':
          description: allows project members to remove tags from tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Tag removed successfully
        '403':
          description: requires project membership for task access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: You do not have permission to manage tags for this resource
        '404':
          description: returns 404 for non-existent tag association
          content:
            text/html:
              schema:
                type: string
      security:
      - BearerAuth: []
  /api/v1/sub_tasks/{id}:
    delete:
      summary: destroy
      tags:
      - SubTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4896
      responses:
        '200':
          description: deletes sub-task successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Task deleted successfully
        '403':
          description: requires owner access to delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: You must be the owner of this project to delete tasks
      security:
      - BearerAuth: []
    get:
      summary: show
      tags:
      - SubTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4886
      responses:
        '200':
          description: allows project members to view sub-tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      priority:
                        type: string
                      due_date:
                        type: string
                      parent_id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      sub_tasks_count:
                        type: integer
                      comments_count:
                        type: integer
                      tags_count:
                        type: integer
                      members_count:
                        type: integer
                      attachments_count:
                        type: integer
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          status:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          tasks_count:
                            type: integer
                          sub_tasks_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - status
                        - created_at
                        - updated_at
                        - members_count
                        - tasks_count
                        - sub_tasks_count
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                      sub_tasks:
                        type: array
                        items: {}
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                      attachments:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - priority
                    - due_date
                    - parent_id
                    - created_at
                    - updated_at
                    - sub_tasks_count
                    - comments_count
                    - tags_count
                    - members_count
                    - attachments_count
                    - project
                    - users
                    - sub_tasks
                    - comments
                    - tags
                    - attachments
                required:
                - data
              example:
                data:
                  id: 4886
                  name: Task 42
                  description: Description for task 42
                  status: todo
                  priority: low
                  due_date: '2025-09-01T15:15:14.804Z'
                  parent_id: 4885
                  created_at: '2025-08-30T15:15:14.806Z'
                  updated_at: '2025-08-30T15:15:14.806Z'
                  sub_tasks_count: 0
                  comments_count: 0
                  tags_count: 0
                  members_count: 2
                  attachments_count: 0
                  project:
                    id: 6401
                    name: Project 105
                    description: Description for project 105
                    status: active
                    created_at: '2025-08-30T15:15:14.788Z'
                    updated_at: '2025-08-30T15:15:14.788Z'
                    members_count: 3
                    tasks_count: 1
                    sub_tasks_count: 1
                  users:
                  - id: 14450
                    username: user249
                    bio: null
                    admin: false
                    email: user248@example.com
                    created_at: '2025-08-30T15:15:14.782Z'
                    updated_at: '2025-08-30T15:15:14.782Z'
                    profile_picture: null
                  - id: 14451
                    username: user250
                    bio: null
                    admin: false
                    email: user249@example.com
                    created_at: '2025-08-30T15:15:14.812Z'
                    updated_at: '2025-08-30T15:15:14.812Z'
                    profile_picture: null
                  sub_tasks: []
                  comments: []
                  tags: []
                  attachments: []
        '404':
          description: requires task membership or project membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Sub-task not found
      security:
      - BearerAuth: []
    put:
      summary: update
      tags:
      - SubTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 4892
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - task
            example:
              task:
                name: Updated Sub-task Name
      responses:
        '200':
          description: updates sub-task successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      status:
                        type: string
                      priority:
                        type: string
                      due_date:
                        type: string
                      parent_id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      sub_tasks_count:
                        type: integer
                      comments_count:
                        type: integer
                      tags_count:
                        type: integer
                      members_count:
                        type: integer
                      attachments_count:
                        type: integer
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          status:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                          members_count:
                            type: integer
                          tasks_count:
                            type: integer
                          sub_tasks_count:
                            type: integer
                        required:
                        - id
                        - name
                        - description
                        - status
                        - created_at
                        - updated_at
                        - members_count
                        - tasks_count
                        - sub_tasks_count
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                      sub_tasks:
                        type: array
                        items: {}
                      comments:
                        type: array
                        items: {}
                      tags:
                        type: array
                        items: {}
                      attachments:
                        type: array
                        items: {}
                    required:
                    - id
                    - name
                    - description
                    - status
                    - priority
                    - due_date
                    - parent_id
                    - created_at
                    - updated_at
                    - sub_tasks_count
                    - comments_count
                    - tags_count
                    - members_count
                    - attachments_count
                    - project
                    - users
                    - sub_tasks
                    - comments
                    - tags
                    - attachments
                required:
                - data
              example:
                data:
                  id: 4888
                  name: Updated Sub-task Name
                  description: Description for task 44
                  status: todo
                  priority: low
                  due_date: '2025-09-01T15:15:14.869Z'
                  parent_id: 4887
                  created_at: '2025-08-30T15:15:14.870Z'
                  updated_at: '2025-08-30T15:15:14.890Z'
                  sub_tasks_count: 0
                  comments_count: 0
                  tags_count: 0
                  members_count: 1
                  attachments_count: 0
                  project:
                    id: 6402
                    name: Project 106
                    description: Description for project 106
                    status: active
                    created_at: '2025-08-30T15:15:14.859Z'
                    updated_at: '2025-08-30T15:15:14.859Z'
                    members_count: 2
                    tasks_count: 1
                    sub_tasks_count: 1
                  users:
                  - id: 14452
                    username: user251
                    bio: null
                    admin: false
                    email: user250@example.com
                    created_at: '2025-08-30T15:15:14.854Z'
                    updated_at: '2025-08-30T15:15:14.854Z'
                    profile_picture: null
                  sub_tasks: []
                  comments: []
                  tags: []
                  attachments: []
        '403':
          description: requires admin access to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: You must be an admin or owner of this project to perform
                  this action
        '422':
          description: validates updated fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Name can't be blank
      security:
      - BearerAuth: []
  /api/v1/invitations:
    get:
      summary: index
      tags:
      - Invitation
      responses:
        '200':
          description: returns http success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        role:
                          type: string
                        status:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                        invitable_type:
                          type: string
                        invitable_id:
                          type: integer
                        invitable_name:
                          type: string
                        inviter:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                        invitee:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                            bio:
                              nullable: true
                            admin:
                              type: boolean
                            email:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            profile_picture:
                              nullable: true
                          required:
                          - id
                          - username
                          - bio
                          - admin
                          - email
                          - created_at
                          - updated_at
                          - profile_picture
                      required:
                      - id
                      - role
                      - status
                      - created_at
                      - updated_at
                      - invitable_type
                      - invitable_id
                      - invitable_name
                      - inviter
                      - invitee
                required:
                - data
              example:
                data: []
      security:
      - BearerAuth: []
  /api/v1/invitations/{id}:
    delete:
      summary: destroy
      tags:
      - Invitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 439
      responses:
        '200':
          description: destroys the invitation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Invitation declined.
        '404':
          description: returns not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invitation not found
      security:
      - BearerAuth: []
    put:
      summary: update
      tags:
      - Invitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 437
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                status:
                  type: string
              required:
              - status
            example:
              status: declined
      responses:
        '200':
          description: does not create membership
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                    - message
                required:
                - data
              example:
                data:
                  message: Invitation declined successfully.
        '404':
          description: returns not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invitation not found
        '422':
          description: returns error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Status is not included in the list
      security:
      - BearerAuth: []
  /api/v1/activities:
    get:
      summary: index
      tags:
      - Activity
      responses:
        '200':
          description: returns http success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        action:
                          type: string
                        read_at:
                          nullable: true
                        created_at:
                          type: string
                        actor:
                          type: object
                          properties:
                            id:
                              type: integer
                            username:
                              type: string
                          required:
                          - id
                          - username
                        notifiable:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - id
                          - name
                          - type
                      required:
                      - id
                      - action
                      - read_at
                      - created_at
                      - actor
                      - notifiable
                required:
                - data
              example:
                data: []
      security:
      - BearerAuth: []
  /api/v1/activities/mark_all_read:
    put:
      summary: mark_all_read
      tags:
      - Activity
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties: {}
            example: {}
      responses:
        '200':
          description: returns http success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: All activities marked as read.
      security:
      - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
