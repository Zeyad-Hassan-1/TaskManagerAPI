openapi: 3.0.1
info:
  title: Task Manager API
  description: A comprehensive task management API with teams, projects, and collaboration features
  version: 1.0.0
servers:
  - url: 'http://localhost:3000'
    description: Development server
  - url: 'https://your-production-url.com'
    description: Production server
paths:
  /api/v1/signup:
    post:
      summary: User Registration
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      example: "johndoe"
                    email:
                      type: string
                      format: email
                      example: "john@example.com"
                    password:
                      type: string
                      format: password
                      example: "Password123!"
                    password_confirmation:
                      type: string
                      format: password
                      example: "Password123!"
                  required:
                    - username
                    - email
                    - password
                    - password_confirmation
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          username:
                            type: string
                          email:
                            type: string
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  errors:
                    type: object

  /api/v1/login:
    post:
      summary: User Login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123!"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          username:
                            type: string
                          email:
                            type: string
                      access_token:
                        type: string
                      refresh_token:
                        type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string

  /api/v1/logout:
    post:
      summary: User Logout
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '401':
          description: Unauthorized

  /api/v1/teams:
    get:
      summary: List all teams for current user
      tags:
        - Teams
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Teams list
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
    post:
      summary: Create a new team
      tags:
        - Teams
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Development Team"
                    description:
                      type: string
                      example: "Team responsible for development tasks"
                  required:
                    - name
      responses:
        '201':
          description: Team created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  errors:
                    type: object

  /api/v1/teams/{id}:
    get:
      summary: Get team details
      tags:
        - Teams
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
        '404':
          description: Team not found
    put:
      summary: Update team
      tags:
        - Teams
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
      responses:
        '200':
          description: Team updated successfully
        '422':
          description: Validation errors
    delete:
      summary: Delete team
      tags:
        - Teams
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Team deleted successfully
        '404':
          description: Team not found

  /api/v1/teams/{team_id}/invite:
    post:
      summary: Invite user to team
      tags:
        - Teams
      security:
        - BearerAuth: []
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invitation:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    role:
                      type: string
                      enum: [admin, member]
                  required:
                    - email
      responses:
        '201':
          description: Invitation sent successfully
        '422':
          description: Validation errors

  /api/v1/teams/{team_id}/projects:
    get:
      summary: List projects in team
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Projects list
    post:
      summary: Create project in team
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                  required:
                    - name
      responses:
        '201':
          description: Project created successfully
        '422':
          description: Validation errors

  /api/v1/projects/{project_id}/members:
    post:
      summary: Add member to project
      tags:
        - Projects
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                role:
                  type: string
                  enum: [admin, member]
      responses:
        '201':
          description: Member added successfully
        '422':
          description: Validation errors

  /api/v1/projects/{project_id}/tasks:
    get:
      summary: List tasks in project
      tags:
        - Tasks
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tasks list
    post:
      summary: Create task in project
      tags:
        - Tasks
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    priority:
                      type: string
                      enum: [low, medium, high, urgent]
                    due_date:
                      type: string
                      format: date
                  required:
                    - name
      responses:
        '201':
          description: Task created successfully
        '422':
          description: Validation errors

  /api/v1/tasks/{task_id}/sub_tasks:
    get:
      summary: List sub-tasks
      tags:
        - Sub Tasks
      security:
        - BearerAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Sub-tasks list
    post:
      summary: Create sub-task
      tags:
        - Sub Tasks
      security:
        - BearerAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    priority:
                      type: string
                      enum: [low, medium, high, urgent]
                    due_date:
                      type: string
                      format: date
                  required:
                    - name
      responses:
        '201':
          description: Sub-task created successfully
        '422':
          description: Validation errors

  /api/v1/projects/{project_id}/add_comment:
    post:
      summary: Add comment to project
      tags:
        - Comments
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: object
                  properties:
                    content:
                      type: string
                  required:
                    - content
      responses:
        '201':
          description: Comment added successfully
        '422':
          description: Validation errors

  /api/v1/tasks/{task_id}/add_comment:
    post:
      summary: Add comment to task
      tags:
        - Comments
      security:
        - BearerAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: object
                  properties:
                    content:
                      type: string
                  required:
                    - content
      responses:
        '201':
          description: Comment added successfully
        '422':
          description: Validation errors

  /api/v1/projects/{project_id}/add_attachment:
    post:
      summary: Add attachment to project
      tags:
        - Attachments
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  type: object
                  properties:
                    file:
                      type: string
                      format: binary
                    name:
                      type: string
      responses:
        '201':
          description: Attachment added successfully
        '422':
          description: Validation errors

  /api/v1/tasks/{task_id}/add_attachment:
    post:
      summary: Add attachment to task
      tags:
        - Attachments
      security:
        - BearerAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  type: object
                  properties:
                    file:
                      type: string
                      format: binary
                    name:
                      type: string
      responses:
        '201':
          description: Attachment added successfully
        '422':
          description: Validation errors

  /api/v1/projects/{project_id}/add_tag:
    post:
      summary: Add tag to project
      tags:
        - Tags
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Tag added successfully
        '422':
          description: Validation errors

  /api/v1/tasks/{task_id}/add_tag:
    post:
      summary: Add tag to task
      tags:
        - Tags
      security:
        - BearerAuth: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Tag added successfully
        '422':
          description: Validation errors

  /api/v1/activities:
    get:
      summary: List user activities
      tags:
        - Activities
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Activities list

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
